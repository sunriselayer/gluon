syntax = "proto3";

package gluon.perp;

import "amino/amino.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "gluon/perp/params.proto";
import "gluon/perp/position.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";

option go_package = "gluon/x/perp/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/gluon/perp/params";
  }

  // Position
  rpc Position(QueryGetPositionRequest) returns (QueryGetPositionResponse) {
    option (google.api.http).get = "/gluon/perp/positions/{owner}/{id}";
  }
  // Positions
  rpc Positions(QueryPositionsRequest) returns (QueryPositionsResponse) {
    option (google.api.http).get = "/gluon/perp/positions/{owner}";
  }
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true
  ];
}

// QueryGetPositionRequest
message QueryGetPositionRequest {
  string owner = 1;
  uint64 id = 2;
}

// QueryGetPositionResponse
message QueryGetPositionResponse {
  Position position = 1 [(gogoproto.nullable) = false];
}

// QueryPositionsRequest
message QueryPositionsRequest {
  string owner = 1;
  cosmos.base.query.v1beta1.PageRequest pagination = 2;
}

// QueryPositionsResponse
message QueryPositionsResponse {
  repeated Position positions = 1 [(gogoproto.nullable) = false];
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}
