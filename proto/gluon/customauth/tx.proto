syntax = "proto3";

package gluon.customauth;

import "amino/amino.proto";
import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "gluon/customauth/params.proto";
import "gluon/customauth/pairing.proto";

import "google/protobuf/any.proto";

option go_package = "gluon/x/customauth/types";

// Msg defines the Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;
  
  // UpdateParams defines a (governance) operation for updating the module
  // parameters. The authority defaults to the x/gov module account.
  rpc UpdateParams  (MsgUpdateParams ) returns (MsgUpdateParamsResponse );
  rpc CreatePairing (MsgCreatePairing) returns (MsgCreatePairingResponse);
  rpc DeletePairing (MsgDeletePairing) returns (MsgDeletePairingResponse);
}
// MsgUpdateParams is the Msg/UpdateParams request type.
message MsgUpdateParams {
  option (cosmos.msg.v1.signer) =                          "authority";
  option           (amino.name) = "gluon/x/customauth/MsgUpdateParams";
  
  // authority is the address that controls the module (defaults to x/gov unless overwritten).
  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  
  // params defines the module parameters to update.
  
  // NOTE: All parameters must be supplied.
  Params params = 2 [(gogoproto.nullable) = false, (amino.dont_omitempty) = true];
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
message MsgUpdateParamsResponse {}

message MsgCreatePairing {
  option (cosmos.msg.v1.signer) = "user";
  string user      = 1;
  google.protobuf.Any public_key = 2 [ (gogoproto.nullable) = false ];
}

message MsgCreatePairingResponse {
  uint64 id = 1;
}

message MsgDeletePairing {
  option (cosmos.msg.v1.signer) = "user";
  string user = 1;
  uint64 id   = 2;
}

message MsgDeletePairingResponse {}

