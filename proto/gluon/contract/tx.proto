syntax = "proto3";

package gluon.contract;

import "amino/amino.proto";
import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "gluon/contract/params.proto";
import "gluon/contract/order.proto";

option go_package = "gluon/x/contract/types";

// Msg defines the Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;
  
  // UpdateParams defines a (governance) operation for updating the module
  // parameters. The authority defaults to the x/gov module account.
  rpc UpdateParams   (MsgUpdateParams  ) returns (MsgUpdateParamsResponse  );
  rpc LazyRegisterOrder    (MsgLazyRegisterOrder   ) returns (MsgLazyRegisterOrderResponse   );
  rpc CancelOrder    (MsgCancelOrder   ) returns (MsgCancelOrderResponse   );
  rpc MatchOrder     (MsgMatchOrder    ) returns (MsgMatchOrderResponse    );
  rpc MatchLazyOrder (MsgMatchLazyOrder) returns (MsgMatchLazyOrderResponse);
}
// MsgUpdateParams is the Msg/UpdateParams request type.
message MsgUpdateParams {
  option (cosmos.msg.v1.signer) =                        "authority";
  option           (amino.name) = "gluon/x/contract/MsgUpdateParams";
  
  // authority is the address that controls the module (defaults to x/gov unless overwritten).
  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // params defines the module parameters to update.
  
  // NOTE: All parameters must be supplied.
  Params params = 2 [(gogoproto.nullable) = false, (amino.dont_omitempty) = true];
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
message MsgUpdateParamsResponse {}

message MsgLazyRegisterOrder {
  option (cosmos.msg.v1.signer) = "order.address";

  string id = 1; 
  Order order = 2 [(gogoproto.nullable) = false, (amino.dont_omitempty) = true];
  uint64 pairing_id = 3;
  bytes signature = 4;
}

message MsgLazyRegisterOrderResponse {}

message MsgCancelOrder {
  option (cosmos.msg.v1.signer) = "user";
  string user  = 1;
  string id = 2;
}

message MsgCancelOrderResponse {}

message MsgMatchOrder {
  option (cosmos.msg.v1.signer) = "address_buy";
  option (cosmos.msg.v1.signer) =   "address_sell";

  string address_buy = 1;
  string address_sell = 2;
  string order_id_buy = 3;
  string order_id_sell = 4;
  string amount = 5 [
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true
  ];
  string price = 6 [
    (cosmos_proto.scalar) = "cosmos.Dec",
    (gogoproto.customtype) = "cosmossdk.io/math.LegacyDec",
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true
  ];
}

message MsgMatchOrderResponse {}

message MsgMatchLazyOrder {
  option (cosmos.msg.v1.signer) = "address_buy";
  option (cosmos.msg.v1.signer) =   "address_sell";

  string address_buy = 1;
  string address_sell = 2;
  string order_id_buy = 3;
  string order_id_sell = 4;
  string amount = 5 [
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true
  ];
  string price = 6 [
    (cosmos_proto.scalar) = "cosmos.Dec",
    (gogoproto.customtype) = "cosmossdk.io/math.LegacyDec",
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true
  ];
}

message MsgMatchLazyOrderResponse {}
