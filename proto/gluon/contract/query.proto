syntax = "proto3";
package gluon.contract;

import "cosmos/base/query/v1beta1/pagination.proto";
import "gluon/contract/order.proto";
import "gluon/contract/params.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";

option go_package = "gluon/x/contract/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/gluon/contract/params";
  }

  // Order
  rpc Order(QueryGetOrderRequest) returns (QueryGetOrderResponse) {
    option (google.api.http).get = "/gluon/contract/orders/{id}";
  }
  // Orders
  rpc Orders(QueryOrdersRequest) returns (QueryOrdersResponse) {
    option (google.api.http).get = "/gluon/contract/orders";
  }
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

// QueryGetOrderRequest
message QueryGetOrderRequest {
  string id = 1;
}

// QueryGetOrderResponse
message QueryGetOrderResponse {
  Order order = 1 [(gogoproto.nullable) = false];
}

// QueryOrdersRequest
message QueryOrdersRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

// QueryOrdersResponse
message QueryOrdersResponse {
  repeated Order order = 1 [(gogoproto.nullable) = false];
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}
