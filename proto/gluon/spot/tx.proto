syntax = "proto3";

package gluon.spot;

import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";
import "gluon/spot/params.proto";
import "gogoproto/gogo.proto";

option go_package = "gluon/x/spot/types";

// Msg defines the Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;

  // UpdateParams defines a (governance) operation for updating the module
  // parameters. The authority defaults to the x/gov module account.
  rpc UpdateParams(MsgUpdateParams) returns (MsgUpdateParamsResponse);
  // MatchOrder
  rpc MatchOrder(MsgMatchOrder) returns (MsgMatchOrderResponse);
}

// MsgUpdateParams is the Msg/UpdateParams request type.
message MsgUpdateParams {
  option (cosmos.msg.v1.signer) = "authority";

  // authority is the address that controls the module (defaults to x/gov unless overwritten).
  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // params defines the module parameters to update.

  // NOTE: All parameters must be supplied.
  Params params = 2 [(gogoproto.nullable) = false];
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
message MsgUpdateParamsResponse {}

// MsgMatchOrder
message MsgMatchOrder {
  option (cosmos.msg.v1.signer) = "buyer";
  option (cosmos.msg.v1.signer) = "seller";

  string buyer = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  string buyer_order_hash = 2;
  string seller = 3 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  string seller_order_hash = 4;
  string price = 5;
  string quantity = 6 [
    (cosmos_proto.scalar) = "cosmos.Int",
    (gogoproto.customtype) = "cosmossdk.io/math.Int",
    (gogoproto.nullable) = false
  ];
}

// MsgMatchOrderResponse
message MsgMatchOrderResponse {}
